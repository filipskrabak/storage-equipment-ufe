/* tslint:disable */
/* eslint-disable */
/**
 * Hospital Equipment Management API
 * Storage Equipment management for hospital
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xskrabakf@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderItem
 */
export interface OrderItem {
    /**
     * Name of the equipment being ordered
     * @type {string}
     * @memberof OrderItem
     */
    equipmentName: string;
    /**
     * Quantity of the equipment requested
     * @type {number}
     * @memberof OrderItem
     */
    quantity: number;
    /**
     * Price per unit of the equipment
     * @type {number}
     * @memberof OrderItem
     */
    unitPrice?: number;
    /**
     * Total price for this item
     * @type {number}
     * @memberof OrderItem
     */
    totalPrice?: number;
    /**
     * Manufacturer of the Equipment
     * @type {string}
     * @memberof OrderItem
     */
    manufacturer?: string;
    /**
     * Serial number of the equipment
     * @type {string}
     * @memberof OrderItem
     */
    serialNumber?: string;
    /**
     * Model of the equipment
     * @type {string}
     * @memberof OrderItem
     */
    model?: string;
}

/**
 * Check if a given object implements the OrderItem interface.
 */
export function instanceOfOrderItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "equipmentName" in value;
    isInstance = isInstance && "quantity" in value;

    return isInstance;
}

export function OrderItemFromJSON(json: any): OrderItem {
    return OrderItemFromJSONTyped(json, false);
}

export function OrderItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'equipmentName': json['equipmentName'],
        'quantity': json['quantity'],
        'unitPrice': !exists(json, 'unitPrice') ? undefined : json['unitPrice'],
        'totalPrice': !exists(json, 'totalPrice') ? undefined : json['totalPrice'],
        'manufacturer': !exists(json, 'manufacturer') ? undefined : json['manufacturer'],
        'serialNumber': !exists(json, 'serialNumber') ? undefined : json['serialNumber'],
        'model': !exists(json, 'model') ? undefined : json['model'],
    };
}

export function OrderItemToJSON(value?: OrderItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'equipmentName': value.equipmentName,
        'quantity': value.quantity,
        'unitPrice': value.unitPrice,
        'totalPrice': value.totalPrice,
        'manufacturer': value.manufacturer,
        'serialNumber': value.serialNumber,
        'model': value.model,
    };
}

